{"version":3,"file":"index-6Y8ckpGR.js","sources":["../../../../node_modules/usehooks-ts/dist/esm/useToggle/useToggle.js","../../src/ui/components/DataDisplay/Collapse/index.tsx"],"sourcesContent":["import { useCallback, useState } from 'react';\nfunction useToggle(defaultValue) {\n    const [value, setValue] = useState(!!defaultValue);\n    const toggle = useCallback(() => setValue(x => !x), []);\n    return [value, toggle, setValue];\n}\nexport default useToggle;\n","import { CollapseProps } from 'antd'\r\nimport { VariantProps, cva } from 'class-variance-authority'\r\nimport { ReactNode, useState } from 'react'\r\nimport { useToggle } from 'usehooks-ts'\r\nimport { cn } from '../../../lib/utils'\r\nimport { Flex, Icon } from '../../General'\r\nimport './style.css'\r\n\r\nconst collapseVariant = {\r\n    size: {\r\n        default: 'pb-padding-m',\r\n        small: 'pb-padding-s',\r\n        large: 'pb-padding-l',\r\n    },\r\n}\r\n\r\nconst collapseHeaderVariant = {\r\n    size: {\r\n        default: 'p-padding-m',\r\n        small: 'p-padding-s',\r\n        large: 'p-padding-l',\r\n    },\r\n}\r\n\r\nconst collapseSizeVariant = {\r\n    size: {\r\n        default: 'h-16',\r\n        small: 'h-spacing-xxxl',\r\n        large: 'h-20',\r\n    },\r\n}\r\n\r\nconst collapseHeaderVariantCVA = cva('', {\r\n    variants: collapseHeaderVariant,\r\n    defaultVariants: { size: 'default' },\r\n})\r\nconst collapseVariantCVA = cva('', {\r\n    variants: collapseVariant,\r\n    defaultVariants: { size: 'default' },\r\n})\r\nconst collapseSizeVariantCVA = cva('', { variants: collapseSizeVariant })\r\n\r\nexport interface IAccordionProps extends VariantProps<typeof collapseVariantCVA> {\r\n    header: ReactNode\r\n    content?: ReactNode\r\n    className?: string\r\n    headerClassName?: string\r\n    panelClassName?: string\r\n    expandIcon?: ((isOpen: boolean) => ReactNode) | undefined\r\n}\r\n\r\nexport interface ICollapseProps extends Omit<CollapseProps, 'size' | 'expandIcon'>, VariantProps<typeof collapseVariantCVA> {\r\n    headerClassName?: string\r\n    panelClassName?: string\r\n    expandIcon?: ((isOpen: boolean) => ReactNode) | undefined\r\n}\r\n\r\nconst Accordion = ({ header, className, headerClassName, panelClassName, content, size = 'default', expandIcon }: IAccordionProps) => {\r\n    const [value, _, setValue] = useToggle()\r\n\r\n    const [display, setDisplay] = useState('none')\r\n    const [opacity, setOpacity] = useState(0)\r\n\r\n    const toggleVisibility = () => {\r\n        if (display === 'none') {\r\n            setDisplay('')\r\n\r\n            setTimeout(() => {\r\n                setOpacity(1)\r\n                setValue(true)\r\n            }, 1)\r\n        } else {\r\n            setOpacity(0)\r\n            setValue(false)\r\n            setTimeout(() => {\r\n                setDisplay('none')\r\n            }, 1)\r\n        }\r\n    }\r\n\r\n    const panelClass = {\r\n        default: 'px-spacing-m',\r\n        small: 'px-spacing-s',\r\n        large: 'px-spacing-l',\r\n    }\r\n\r\n    console.log('size', size)\r\n    return (\r\n        <div\r\n            className={cn(\r\n                'flex flex-col items-center  w-full  transition-all overflow-hidden collapse-border',\r\n                cn(collapseVariantCVA({ size }), collapseSizeVariantCVA({ size: value ? undefined : size })),\r\n                className\r\n            )}\r\n        >\r\n            <div\r\n                onClick={toggleVisibility}\r\n                className={cn('flex items-center  justify-between w-full  ', collapseHeaderVariantCVA({ size }), collapseSizeVariantCVA({ size: size }), headerClassName)}\r\n            >\r\n                <>{header}</>{' '}\r\n                <Flex>\r\n                    {expandIcon ? expandIcon(value) : <Icon fill=\"surface-primary\" name={value ? 'chevron-up' : 'chevron-down'} size=\"padding-s\" className=\"ml-spacing-xxs\" />}\r\n                </Flex>\r\n            </div>\r\n            <div\r\n                className={cn('w-full  overflow-hidden transition-all ')}\r\n                style={{\r\n                    display,\r\n                    opacity,\r\n                    height: value ? 'auto' : 0,\r\n                }}\r\n            >\r\n                <div className={cn(size ? panelClass[size] : '', panelClassName)}>{content}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CollapseBase = ({ items, className, headerClassName, panelClassName, size, expandIcon, ...props }: ICollapseProps) => {\r\n    return (\r\n        <>\r\n            <div className=\"collapse-wrapper w-full\">\r\n                {items?.map((v) => {\r\n                    return (\r\n                        <Accordion\r\n                            size={size}\r\n                            header={v.label}\r\n                            className={cn(className, 'accordion-collapse')}\r\n                            headerClassName={cn(headerClassName)}\r\n                            panelClassName={cn(panelClassName)}\r\n                            content={v.children}\r\n                            expandIcon={expandIcon}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { CollapseBase as Collapse }\r\n"],"names":["useToggle","defaultValue","value","setValue","useState","toggle","useCallback","x","collapseVariant","collapseHeaderVariant","collapseSizeVariant","collapseHeaderVariantCVA","cva","collapseVariantCVA","collapseSizeVariantCVA","Accordion","header","className","headerClassName","panelClassName","content","size","expandIcon","_","display","setDisplay","opacity","setOpacity","toggleVisibility","panelClass","jsxs","cn","jsx","Fragment","Flex","Icon","CollapseBase","items","props","v"],"mappings":"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","x_google_ignoreList":[0]}