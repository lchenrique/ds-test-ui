{"version":3,"file":"index-_ZTrWaLD.js","sources":["../../src/ui/hooks/useBreakpoint.ts","../../src/ui/components/Typography/Text/index.tsx"],"sourcesContent":["import { screens } from \"@adopets/tokens\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction useBreakpoint() {\r\n  const [breakpoint, setBreakpoint] = useState({\r\n    xs: true,\r\n    sm: true,\r\n    md: true,\r\n    lg: true,\r\n    xl: true,\r\n  });\r\n\r\n  const ret: any = {};\r\n  const handleResize = () => {\r\n    Object.keys(screens).forEach((key: any) => {\r\n      ret[key] = (screens as any)[key].replace(\"px\", \"\");\r\n    });\r\n\r\n    setBreakpoint({\r\n      xs: window.innerWidth > 0 || window.innerWidth >= ret[\"xs\"],\r\n      sm: window.innerWidth > ret[\"xs\"] || window.innerWidth >= ret[\"sm\"],\r\n      md: window.innerWidth > ret[\"sm\"] || window.innerWidth >= ret[\"md\"],\r\n      lg: window.innerWidth > ret[\"md\"] || window.innerWidth >= ret[\"lg\"],\r\n      xl: window.innerWidth > ret[\"lg\"] || window.innerWidth >= ret[\"xl\"],\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return breakpoint;\r\n}\r\n\r\nexport { useBreakpoint };\r\n","import { IThemeColorsReturn, fontSizes, theme } from \"@adopets/tokens\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cn } from \"../../../lib/utils\";\r\n\r\ntype PickIntrinsicElements = Pick<\r\n  JSX.IntrinsicElements,\r\n  | \"a\"\r\n  | \"h1\"\r\n  | \"h2\"\r\n  | \"h3\"\r\n  | \"h4\"\r\n  | \"h5\"\r\n  | \"h6\"\r\n  | \"p\"\r\n  | \"pre\"\r\n  | \"span\"\r\n  | \"strong\"\r\n>;\r\n\r\nexport type ITextProps<K extends keyof PickIntrinsicElements> = Partial<\r\n  PickIntrinsicElements[K]\r\n> & {\r\n  as?: K;\r\n  size?: keyof typeof fontSizes;\r\n  color?: keyof IThemeColorsReturn | \"inherit\";\r\n  asChild?: boolean;\r\n};\r\n\r\nexport function Text<K extends keyof PickIntrinsicElements>({\r\n  as,\r\n  children,\r\n  className,\r\n  color,\r\n  size,\r\n  asChild,\r\n  ...props\r\n}: ITextProps<K>) {\r\n  const As = asChild ? Slot : as || \"span\";\r\n  const textColor = color\r\n    ? color !== \"inherit\"\r\n      ? theme.colors(color)\r\n      : \"inherit\"\r\n    : undefined;\r\n  const textSize = size ? fontSizes[size] : undefined;\r\n\r\n  return (\r\n    <As\r\n      className={cn(\r\n        \"\",\r\n        !textColor ? \"text-@text-light\" : \"\",\r\n        !textSize ? \"text-md\" : \"\",\r\n        className,\r\n      )}\r\n      style={{\r\n        color: textColor,\r\n        fontSize: textSize,\r\n      }}\r\n      {...(props as any)}\r\n    >\r\n      {children}\r\n    </As>\r\n  );\r\n}\r\n"],"names":["useBreakpoint","breakpoint","setBreakpoint","useState","ret","handleResize","screens","key","useEffect","Text","as","children","className","color","size","asChild","props","As","Slot","textColor","theme","textSize","fontSizes","jsx","cn"],"mappings":"8GAGA,SAASA,GAAgB,CACvB,KAAM,CAACC,EAAYC,CAAa,EAAIC,WAAS,CAC3C,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,EAAA,CACL,EAEKC,EAAW,CAAA,EACXC,EAAe,IAAM,CACzB,OAAO,KAAKC,CAAO,EAAE,QAASC,GAAa,CACzCH,EAAIG,CAAG,EAAKD,EAAgBC,CAAG,EAAE,QAAQ,KAAM,EAAE,CAAA,CAClD,EAEaL,EAAA,CACZ,GAAI,OAAO,WAAa,GAAK,OAAO,YAAcE,EAAI,GACtD,GAAI,OAAO,WAAaA,EAAI,IAAS,OAAO,YAAcA,EAAI,GAC9D,GAAI,OAAO,WAAaA,EAAI,IAAS,OAAO,YAAcA,EAAI,GAC9D,GAAI,OAAO,WAAaA,EAAI,IAAS,OAAO,YAAcA,EAAI,GAC9D,GAAI,OAAO,WAAaA,EAAI,IAAS,OAAO,YAAcA,EAAI,EAAI,CACnE,CAAA,EAGHI,OAAAA,EAAAA,UAAU,KACKH,IACN,OAAA,iBAAiB,SAAUA,CAAY,EACvC,IAAM,CACJ,OAAA,oBAAoB,SAAUA,CAAY,CAAA,GAElD,CAAE,CAAA,EAEEJ,CACT,CCRO,SAASQ,EAA4C,CAC1D,GAAAC,EACA,SAAAC,EACA,UAAAC,EACA,MAAAC,EACA,KAAAC,EACA,QAAAC,EACA,GAAGC,CACL,EAAkB,CACV,MAAAC,EAAKF,EAAUG,EAAOR,GAAM,OAC5BS,EAAYN,EACdA,IAAU,UACRO,EAAM,OAAOP,CAAK,EAClB,UACF,OACEQ,EAAWP,EAAOQ,EAAUR,CAAI,EAAI,OAGxC,OAAAS,EAACN,EAAA,CACC,UAAWO,EACT,GACCL,EAAiC,GAArB,mBACZE,EAAuB,GAAZ,UACZT,CACF,EACA,MAAO,CACL,MAAOO,EACP,SAAUE,CACZ,EACC,GAAIL,EAEJ,SAAAL,CAAA,CAAA,CAGP"}