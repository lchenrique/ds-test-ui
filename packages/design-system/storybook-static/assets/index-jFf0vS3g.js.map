{"version":3,"file":"index-jFf0vS3g.js","sources":["../../../../node_modules/antd/es/_util/gapSize.js","../../../../node_modules/antd/es/space/context.js","../../../../node_modules/antd/es/space/Item.js","../../../../node_modules/antd/es/space/index.js"],"sourcesContent":["export function isPresetSize(size) {\n  return ['small', 'middle', 'large'].includes(size);\n}\nexport function isValidGapNumber(size) {\n  if (!size) {\n    // The case of size = 0 is deliberately excluded here, because the default value of the gap attribute in CSS is 0, so if the user passes 0 in, we can directly ignore it.\n    return false;\n  }\n  return typeof size === 'number' && !Number.isNaN(size);\n}","import React from 'react';\nexport const SpaceContext = /*#__PURE__*/React.createContext({\n  latestIndex: 0\n});\nexport const SpaceContextProvider = SpaceContext.Provider;","\"use client\";\n\nimport * as React from 'react';\nimport { SpaceContext } from './context';\nconst Item = _ref => {\n  let {\n    className,\n    index,\n    children,\n    split,\n    style\n  } = _ref;\n  const {\n    latestIndex\n  } = React.useContext(SpaceContext);\n  if (children === null || children === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${className}-split`\n  }, split));\n};\nexport default Item;","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { isPresetSize, isValidGapNumber } from '../_util/gapSize';\nimport { ConfigContext } from '../config-provider';\nimport Compact from './Compact';\nimport { SpaceContextProvider } from './context';\nimport Item from './Item';\nimport useStyle from './style';\nexport { SpaceContext } from './context';\nconst Space = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a, _b;\n  const {\n    getPrefixCls,\n    space,\n    direction: directionConfig\n  } = React.useContext(ConfigContext);\n  const {\n      size = (space === null || space === void 0 ? void 0 : space.size) || 'small',\n      align,\n      className,\n      rootClassName,\n      children,\n      direction = 'horizontal',\n      prefixCls: customizePrefixCls,\n      split,\n      style,\n      wrap = false,\n      classNames: customClassNames,\n      styles\n    } = props,\n    otherProps = __rest(props, [\"size\", \"align\", \"className\", \"rootClassName\", \"children\", \"direction\", \"prefixCls\", \"split\", \"style\", \"wrap\", \"classNames\", \"styles\"]);\n  const [horizontalSize, verticalSize] = Array.isArray(size) ? size : [size, size];\n  const isPresetVerticalSize = isPresetSize(verticalSize);\n  const isPresetHorizontalSize = isPresetSize(horizontalSize);\n  const isValidVerticalSize = isValidGapNumber(verticalSize);\n  const isValidHorizontalSize = isValidGapNumber(horizontalSize);\n  const childNodes = toArray(children, {\n    keepEmpty: true\n  });\n  const mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  const prefixCls = getPrefixCls('space', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(prefixCls, space === null || space === void 0 ? void 0 : space.className, hashId, `${prefixCls}-${direction}`, {\n    [`${prefixCls}-rtl`]: directionConfig === 'rtl',\n    [`${prefixCls}-align-${mergedAlign}`]: mergedAlign,\n    [`${prefixCls}-gap-row-${verticalSize}`]: isPresetVerticalSize,\n    [`${prefixCls}-gap-col-${horizontalSize}`]: isPresetHorizontalSize\n  }, className, rootClassName);\n  const itemClassName = classNames(`${prefixCls}-item`, (_a = customClassNames === null || customClassNames === void 0 ? void 0 : customClassNames.item) !== null && _a !== void 0 ? _a : (_b = space === null || space === void 0 ? void 0 : space.classNames) === null || _b === void 0 ? void 0 : _b.item);\n  // Calculate latest one\n  let latestIndex = 0;\n  const nodes = childNodes.map((child, i) => {\n    var _a, _b;\n    if (child !== null && child !== undefined) {\n      latestIndex = i;\n    }\n    const key = child && child.key || `${itemClassName}-${i}`;\n    return /*#__PURE__*/React.createElement(Item, {\n      className: itemClassName,\n      key: key,\n      index: i,\n      split: split,\n      style: (_a = styles === null || styles === void 0 ? void 0 : styles.item) !== null && _a !== void 0 ? _a : (_b = space === null || space === void 0 ? void 0 : space.styles) === null || _b === void 0 ? void 0 : _b.item\n    }, child);\n  });\n  const spaceContext = React.useMemo(() => ({\n    latestIndex\n  }), [latestIndex]);\n  // =========================== Render ===========================\n  if (childNodes.length === 0) {\n    return null;\n  }\n  const gapStyle = {};\n  if (wrap) {\n    gapStyle.flexWrap = 'wrap';\n  }\n  if (!isPresetHorizontalSize && isValidHorizontalSize) {\n    gapStyle.columnGap = horizontalSize;\n  }\n  if (!isPresetVerticalSize && isValidVerticalSize) {\n    gapStyle.rowGap = verticalSize;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: cls,\n    style: Object.assign(Object.assign(Object.assign({}, gapStyle), space === null || space === void 0 ? void 0 : space.style), style)\n  }, otherProps), /*#__PURE__*/React.createElement(SpaceContextProvider, {\n    value: spaceContext\n  }, nodes)));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Space.displayName = 'Space';\n}\nconst CompoundedSpace = Space;\nCompoundedSpace.Compact = Compact;\nexport default CompoundedSpace;"],"names":["isPresetSize","size","isValidGapNumber","SpaceContext","React","SpaceContextProvider","Item","_ref","className","index","children","split","style","latestIndex","React.useContext","React.createElement","React.Fragment","Item$1","__rest","s","e","t","p","i","Space","React.forwardRef","props","ref","_a","_b","getPrefixCls","space","directionConfig","ConfigContext","align","rootClassName","direction","customizePrefixCls","wrap","customClassNames","styles","otherProps","horizontalSize","verticalSize","isPresetVerticalSize","isPresetHorizontalSize","isValidVerticalSize","isValidHorizontalSize","childNodes","toArray","mergedAlign","prefixCls","wrapSSR","hashId","useStyle","cls","classNames","itemClassName","nodes","child","key","spaceContext","React.useMemo","gapStyle","CompoundedSpace","Compact","Space$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}